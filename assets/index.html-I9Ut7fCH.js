import{_ as e,c as n,a,o as i}from"./app-DUomSOUZ.js";const l={};function t(d,s){return i(),n("div",null,s[0]||(s[0]=[a(`<h2 id="文档" tabindex="-1"><a class="header-anchor" href="#文档"><span>文档</span></a></h2><ul><li><a href="https://cn.vuejs.org/guide/quick-start" target="_blank" rel="noopener noreferrer">官方文档</a></li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><ul><li>安装脚手架 <code>npm install -g vue-cli</code> <code>npm i -g @vue/cli</code></li><li>卸载脚手架 <code>npm uninstall -g vue-cli</code></li><li>查询脚手架版本 <code>npm view vue-cli versions --json</code></li><li>删除脚手架 <code>cnpm uninstall -g vue-cli</code></li><li>查看版本 <code>vue -V</code></li><li>创建项目 <ul><li><code>vue create demo1</code></li><li><code>vue init webpack demo1</code></li><li><code>vue init webpack-simple demo1</code></li></ul></li><li>初始化(可省略) <code>npm install</code></li><li>启动项目 <code>npm run dev</code></li></ul><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><h3 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h3><ul><li>位置 <code>data(){return{}}</code></li><li>文本 <code>v-text=&#39;msg&#39;</code> <code>{{data}}</code></li><li>属性 <code>v-bind:title=&quot;title&quot;</code> <code>:src=&quot;url&quot;</code></li><li>html <code>v-html=&quot;html1&quot;</code></li><li>class <code>v-bind:class=&quot;{&#39;red&#39;: flag}</code> <code>:class=&quot;{&#39;red&#39;: flag==0}</code></li><li>style <code>v-bind:style=&quot;{&#39;width&#39;:widthdata+&#39;px&#39;}</code> <code>:style=&quot;{&#39;width&#39;:data+&#39;px&#39;}</code></li><li>双向数据绑定 <code>v-model=&#39;msg&#39;</code></li><li>dom元素 <code>this.$refs</code></li><li>显示/隐藏 <code>v-show</code></li></ul><h3 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h3><ul><li>语法 <code>methods(){}</code></li><li>写法 <code>Method1: function(){}、method(){}</code></li><li>获取属性 <code>this.msg | this.$set(this,&#39;msg&#39;,&#39;测试&#39;);</code></li><li>获取事件对象 <code>e.srcElement、e.keyCode</code></li><li>数组 <ul><li>添加 <code>this.arr.push(&#39;aa&#39;)</code></li><li>修改 <code>this.arr.splice(key, 1, &#39;测试&#39;);</code></li><li>数组对象放值 <code>this.$set(this.iptDatas[index], </code>showAlert<code>, true)</code></li></ul></li><li>循环<div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>this.arr.forEach(item =&gt; {</span></span>
<span class="line"><span>    this.$set(item, &#39;showEditBtn&#39;, true)</span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>存储 <ul><li>设置数据 <code>localStorage.setItem(key, value)</code></li><li>获取数据 <code>localStorage.getItem(key)</code></li><li>删除数据 <code>localStorage.removeItem(key)</code></li></ul></li><li>条件判断 <ul><li><code>v-if=&quot;&quot;</code></li></ul></li><li>循环 <ul><li><code>v-for=&quot;item, key in list&quot;</code></li></ul></li><li>生命周期 <ul><li>创建之前 <code>beforeCreate(){}</code></li><li>创建后 <code>created(){}</code></li><li>dom渲染前 <code>beforeMounte(){}</code></li><li>dom渲染后 <code>mounted() {}</code></li><li>销毁前 <code>beforeDestroy() {}</code></li><li>销毁后 <code>destroyed() {}</code></li></ul></li></ul><h3 id="事件" tabindex="-1"><a class="header-anchor" href="#事件"><span>事件</span></a></h3><ul><li>点击 <code>v-on:click=&quot;method()&quot;、@click=&quot;method(&#39;111&#39;)&quot;、@click=&quot;method($event)&quot;</code></li><li>键盘 <code>@keydown=&quot;method()&quot;</code></li></ul><h3 id="模块" tabindex="-1"><a class="header-anchor" href="#模块"><span>模块</span></a></h3><ul><li>定义 <code>Var storage = {…}</code></li><li>暴露 <code>export default storage;</code></li><li>引入 <code>improt storage from &#39;./model/storage.js&#39;</code></li></ul><h3 id="组件" tabindex="-1"><a class="header-anchor" href="#组件"><span>组件</span></a></h3><ul><li>定义 <code>Home.vue</code></li><li>引入 <code>import Home from &#39;./components/Home.vue&#39;</code></li><li>声明 <code>components: {&#39;v-home&#39;:Home}</code></li><li>使用 <code>&lt;v-home&gt;&lt;/v-home&gt;</code></li><li>内部css <code>scoped</code></li></ul><h3 id="请求数据" tabindex="-1"><a class="header-anchor" href="#请求数据"><span>请求数据</span></a></h3><ul><li>vue-resource <ul><li>安装 <code>cnpm install vue-resource --save</code></li><li>引入 <code>import VueResource from &#39;vue-resource&#39;</code></li><li>使用 <code>Vue.use(VueResource)</code></li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>this.$http.get(&#39;http://jsonplaceholder.typicode.com/users&#39;).then( | this.$http.jsop</span></span>
<span class="line"><span>    response =&gt; {</span></span>
<span class="line"><span>        this.someData = response.body;</span></span>
<span class="line"><span>    }, response =&gt; {</span></span>
<span class="line"><span>        console.log(&#39;err&#39;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>axios <ul><li>安装 <code>cnpm install axios --save</code></li><li>引入 <code>import Axios from &#39;axios&#39;</code></li><li>使用</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>Axios.get(api).then((response)=&gt;{</span></span>
<span class="line"><span>    this.list=response.body;</span></span>
<span class="line"><span>}).catch((error)=&gt; {</span></span>
<span class="line"><span>    console.log(error);</span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>fetch-jsop</li></ul><h3 id="传值" tabindex="-1"><a class="header-anchor" href="#传值"><span>传值</span></a></h3><h4 id="父子组件传值" tabindex="-1"><a class="header-anchor" href="#父子组件传值"><span>父子组件传值</span></a></h4><ul><li>父-&gt;子 <ul><li>声明 <code>&lt;v-head :title=title :run=run&gt;&lt;/v-head&gt;</code></li><li>调用 <code>props:[&#39;title&#39;, &#39;run&#39;]</code></li><li>主动获取 <code>this.$parent.msg</code></li></ul></li><li>子-&gt;父 <ul><li>属性传值 <ul><li>声明 <code>&lt;v-head ref=&quot;head&quot;&gt;&lt;/v-head&gt;</code></li><li>调用 <code>this.$refs.head.run();</code></li></ul></li><li>方法传值 <ul><li>传值</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>that.$emit(&#39;handleStop&#39;,{</span></span>
<span class="line"><span>    localId:localId</span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>接收</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;record-voice@handleStop=&quot;saveRecordVoice&quot;v-show=&quot;showRecordVoice&quot;/&gt;</span></span>
<span class="line"><span>saveRecordVoice(param){</span></span>
<span class="line"><span>    this.showRecordVoice=false;</span></span>
<span class="line"><span>    this.localId=param.localId;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li>非父子(广播) <ul><li>定义空组件</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>import Vue from &#39;vue&#39;;</span></span>
<span class="line"><span>var VueEvent = new Vue();</span></span>
<span class="line"><span>export default VueEvent;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>组件广播 <code>VueEvent.$emit(&#39;to-news&#39;, this.msg);</code></li><li>组件接收</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>VueEvent.$on(&#39;to-nerws&#39;, function(data) {</span></span>
<span class="line"><span>    this.msg = data;</span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="动态路由传值" tabindex="-1"><a class="header-anchor" href="#动态路由传值"><span>动态路由传值</span></a></h4><ul><li>声明 <code>{ path: &#39;/content/:aid&#39;, component: Content }</code></li><li>传递 <code>&lt;router-link :to=&quot;&#39;/content/&#39;+key&quot;&gt;{{key}}{{item}}&lt;/router-link&gt;</code></li><li>获取 <code>this.$route.params</code></li></ul><h4 id="get传值" tabindex="-1"><a class="header-anchor" href="#get传值"><span>get传值</span></a></h4><ul><li>声明 <code>&lt;router-link :to=&quot;&#39;/product?aid=&#39;+key&quot;&gt;{{key}}{{item}}&lt;/router-link&gt;</code></li><li>传递 <code>{ path: &#39;/product&#39;, component: Product },</code></li><li>获取 <code>this.$route.query</code></li></ul><h3 id="路由-动态根中挂在组件" tabindex="-1"><a class="header-anchor" href="#路由-动态根中挂在组件"><span>路由(动态根中挂在组件)</span></a></h3><ul><li>安装 <code>cnpm install vue-router --save</code></li><li>引用 <code>import VueRouter from &#39;vue-router&#39;</code><code>Vue.use(VueRouter)</code></li><li>路由配置<div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>import Home from &#39;./components/Home&#39;;</span></span>
<span class="line"><span>import News from &#39;./components/News&#39;;</span></span>
<span class="line"><span>const routes = [</span></span>
<span class="line"><span>    { path: &#39;/home&#39;, component: Home },</span></span>
<span class="line"><span>    { path: &#39;/news&#39;, component: News }</span></span>
<span class="line"><span>]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>实例化<div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>const router = new VueRouter({</span></span>
<span class="line"><span>    routes</span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>挂载<div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>new Vue({</span></span>
<span class="line"><span>    el: &#39;#app&#39;,</span></span>
<span class="line"><span>    router,</span></span>
<span class="line"><span>    render: h =&gt; h(App)</span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>使用<div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;router-link to=&quot;/home&quot;&gt;首页&lt;/router-link&gt;</span></span>
<span class="line"><span>&lt;router-link to=&quot;/news&quot;&gt;新闻&lt;/router-link&gt;</span></span>
<span class="line"><span>&lt;hr&gt;</span></span>
<span class="line"><span>&lt;router-view&gt;&lt;/router-view&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="编程式导航-js页面跳转" tabindex="-1"><a class="header-anchor" href="#编程式导航-js页面跳转"><span>编程式导航 (js页面跳转)</span></a></h3><ul><li><code>this.$router.push({path: &#39;news&#39;});</code></li><li><code>this.$router.push({name: &#39;content&#39;, params: {aid: 123}});</code></li></ul><h3 id="命名路由" tabindex="-1"><a class="header-anchor" href="#命名路由"><span>命名路由</span></a></h3><ul><li>history模式<div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>const router = new VueRouter({</span></span>
<span class="line"><span>    mode: &#39;history&#39;,</span></span>
<span class="line"><span>    routes</span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="路由的嵌套" tabindex="-1"><a class="header-anchor" href="#路由的嵌套"><span>路由的嵌套</span></a></h3><ul><li>配置<div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>{</span></span>
<span class="line"><span>    path: &#39;/user&#39;,</span></span>
<span class="line"><span>    component: User,</span></span>
<span class="line"><span>    children: [</span></span>
<span class="line"><span>        { path: &#39;useradd&#39;, component: UserAdd },</span></span>
<span class="line"><span>        { path: &#39;userlist&#39;, component: UserList },</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>使用<div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;div class=&quot;left&quot;&gt;</span></span>
<span class="line"><span>    &lt;ul&gt;</span></span>
<span class="line"><span>        &lt;li&gt;&lt;router-link to=&quot;/user/useradd&quot;&gt;用户增加&lt;/router-link&gt;&lt;/li&gt;</span></span>
<span class="line"><span>        &lt;li&gt;&lt;router-link to=&quot;/user/userlist&quot;&gt;用户列表&lt;/router-link&gt;&lt;/li&gt;</span></span>
<span class="line"><span>    &lt;/ul&gt;</span></span>
<span class="line"><span>&lt;/div&gt;</span></span>
<span class="line"><span>&lt;div class=&quot;right&quot;&gt;</span></span>
<span class="line"><span>    &lt;router-view&gt;&lt;/router-view&gt;</span></span>
<span class="line"><span>&lt;/div&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="路由模块化" tabindex="-1"><a class="header-anchor" href="#路由模块化"><span>路由模块化</span></a></h3><ul><li>路由中的内容提取 router.js <code>export default router;</code></li><li>使用 <code>import router from &#39;./router/router&#39;;</code></li></ul><h3 id="vuex传值-不同页面数据共享" tabindex="-1"><a class="header-anchor" href="#vuex传值-不同页面数据共享"><span>Vuex传值(不同页面数据共享)</span></a></h3><ul><li>安装 <code>cnpm install vuex --save</code></li><li>storge.js引入vuex<div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>import Vue from &#39;vue&#39;;</span></span>
<span class="line"><span>import Vuex from &#39;vuex&#39;;</span></span>
<span class="line"><span>Vue.use(Vuex);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>定义数据<div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>var state = {</span></span>
<span class="line"><span>    count: 1</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>定义方法<div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>var mutations = {</span></span>
<span class="line"><span>    incCount() {</span></span>
<span class="line"><span>        ++state.count;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>实例化<div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>const store = new Vuex.Store({</span></span>
<span class="line"><span>    state,</span></span>
<span class="line"><span>    mutations: mutations</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span>export default store;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>使用<div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>beforeMounte() {</span></span>
<span class="line"><span>    const oScript = document.createElement(&#39;script&#39;);</span></span>
<span class="line"><span>    oScript.type = &#39;text/javascript&#39;;</span></span>
<span class="line"><span>    oScript.src = &#39;https://www.echartsjs.com/examples/vendors/echarts/map/js/china.js&#39;;</span></span>
<span class="line"><span>    document.body.appendChild(oScript);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="消息提示" tabindex="-1"><a class="header-anchor" href="#消息提示"><span>消息提示</span></a></h3><ul><li><code>this.$Message.info(&#39;开关状态：&#39; + status);</code></li></ul><h2 id="框架" tabindex="-1"><a class="header-anchor" href="#框架"><span>框架</span></a></h2><h3 id="axios-接口调用" tabindex="-1"><a class="header-anchor" href="#axios-接口调用"><span>Axios 接口调用</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>const params = qs.stringify({</span></span>
<span class="line"><span>      &quot;schemeType&quot;: &quot;schemeType&quot;,</span></span>
<span class="line"><span>      &quot;schemeCode&quot;: &quot;schemeCode&quot;,</span></span>
<span class="line"><span>      &quot;schemeName&quot;: &quot;schemeName&quot;,</span></span>
<span class="line"><span>      &quot;schemeContent&quot;: &quot;schemeContent&quot;</span></span>
<span class="line"><span>    });</span></span>
<span class="line"><span>    Axios.post(this.saveSchemeUrl, params).then((response)=&gt;{</span></span>
<span class="line"><span>        console.log(response);</span></span>
<span class="line"><span>        </span></span>
<span class="line"><span>    }).catch((error)=&gt;{</span></span>
<span class="line"><span>        console.log(error);</span></span>
<span class="line"><span>    });</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mintui-手机端ui组件" tabindex="-1"><a class="header-anchor" href="#mintui-手机端ui组件"><span>MintUI 手机端UI组件</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>安装</span></span>
<span class="line"><span>    cnpm install mint-ui --save</span></span>
<span class="line"><span>引入</span></span>
<span class="line"><span>    import Mint from&#39;mint-ui&#39;;</span></span>
<span class="line"><span>    import &#39;mint-ui/lib/style.css&#39;;</span></span>
<span class="line"><span>    Vue.use(Mint);</span></span>
<span class="line"><span>使用</span></span>
<span class="line"><span>    &lt;mt-radio  title=&quot;单选框列表&quot;  v-model=&quot;value&quot; :options=&quot;[&#39;选项A&#39;, &#39;选项B&#39;, &#39;选项C&#39;]&quot;&gt;&lt;/mt-radio&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="elementui-ui组件" tabindex="-1"><a class="header-anchor" href="#elementui-ui组件"><span>ElementUI UI组件</span></a></h3><ul><li><a href="https://element-plus.org/zh-CN/component/overview.html" target="_blank" rel="noopener noreferrer">官方文档</a></li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>安装</span></span>
<span class="line"><span>    cnpm install element-ui --save</span></span>
<span class="line"><span>引入</span></span>
<span class="line"><span>    import ElementUI from&#39;element-ui&#39;;</span></span>
<span class="line"><span>    import &#39;element-ui/lib/theme-chalk/index.css&#39;;</span></span>
<span class="line"><span>    Vue.use(ElementUI);</span></span>
<span class="line"><span>配置 file_loader</span></span>
<span class="line"><span>     {</span></span>
<span class="line"><span>        test: /\\.(eot|svg|ttf|woff|woff2)(\\?\\S*)?$/,</span></span>
<span class="line"><span>        loader: &#39;file-loader&#39;</span></span>
<span class="line"><span>     }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="echarts-统计图表" tabindex="-1"><a class="header-anchor" href="#echarts-统计图表"><span>Echarts 统计图表</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>安装</span></span>
<span class="line"><span>    npm install echarts --save</span></span>
<span class="line"><span>引入</span></span>
<span class="line"><span>    import echarts from &#39;echarts&#39;</span></span>
<span class="line"><span>    Vue.prototype.$echarts = echarts;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="iview-ui组件" tabindex="-1"><a class="header-anchor" href="#iview-ui组件"><span>iview UI组件</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>import iView from &#39;iview&#39;;</span></span>
<span class="line"><span>import &#39;iview/dist/styles/iview.css&#39;;</span></span>
<span class="line"><span>Vue.use(iView);</span></span>
<span class="line"><span>this.$Notice.success({</span></span>
<span class="line"><span>    title: &#39;方案保存成功&#39;,</span></span>
<span class="line"><span>    desc: true ? &#39;&#39; : &#39;方案保存成功&#39;</span></span>
<span class="line"><span>});</span></span>
<span class="line"><span>npm install view-design --save</span></span>
<span class="line"><span>npm install iview-loader --save-dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rimraf" tabindex="-1"><a class="header-anchor" href="#rimraf"><span>rimraf</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>npm install rimraf --save</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="cross-env" tabindex="-1"><a class="header-anchor" href="#cross-env"><span>cross-env</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>npm install cross-env --save</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="localforage-本地存储" tabindex="-1"><a class="header-anchor" href="#localforage-本地存储"><span>localforage 本地存储</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>npm install localforage</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="打印" tabindex="-1"><a class="header-anchor" href="#打印"><span>打印</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>安装</span></span>
<span class="line"><span>    npm install vue-print-nb --save</span></span>
<span class="line"><span>引入</span></span>
<span class="line"><span>    import Print from &#39;vue-print-nb&#39;</span></span>
<span class="line"><span>    Vue.use(Print);</span></span>
<span class="line"><span>使用</span></span>
<span class="line"><span>    &lt;div id=&quot;printMe&quot; style=&quot;background:red;&quot;&gt;</span></span>
<span class="line"><span>    &lt;button v-print=&quot;&#39;#printMe&#39;&quot;&gt;Print local range&lt;/button&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="动画" tabindex="-1"><a class="header-anchor" href="#动画"><span>动画</span></a></h3><ul><li>motion <code>https://motion.dev/docs/vue</code></li></ul><h2 id="常用" tabindex="-1"><a class="header-anchor" href="#常用"><span>常用</span></a></h2><h3 id="开发模式" tabindex="-1"><a class="header-anchor" href="#开发模式"><span>开发模式</span></a></h3><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span>	&lt;div class=&quot;wrapper&quot;&gt;</span></span>
<span class="line"><span>	&lt;/div&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span>&lt;script lang=&quot;ts&quot;&gt;</span></span>
<span class="line"><span>	import { Component, Vue, Prop } from &#39;vue-property-decorator&#39;;</span></span>
<span class="line"><span>	import qs from &#39;qs&#39;;</span></span>
<span class="line"><span>	import Axios from &#39;axios&#39;;</span></span>
<span class="line"><span>	import ViewUI from &#39;view-design&#39;;</span></span>
<span class="line"><span>	import &#39;view-design/dist/styles/iview.css&#39;;</span></span>
<span class="line"><span>	Vue.use(ViewUI);</span></span>
<span class="line"><span>	export default {</span></span>
<span class="line"><span>		data() {</span></span>
<span class="line"><span>			return {</span></span>
<span class="line"><span>			}</span></span>
<span class="line"><span>		},</span></span>
<span class="line"><span>		mounted() {</span></span>
<span class="line"><span>			this.getData();</span></span>
<span class="line"><span>		},</span></span>
<span class="line"><span>		methods: {</span></span>
<span class="line"><span>			getData() {</span></span>
<span class="line"><span>				const params = qs.stringify({});</span></span>
<span class="line"><span>				Axios.post(this.getDataUrl, params).then((response)=&gt;{</span></span>
<span class="line"><span>					if (response[&#39;errcode&#39;] == 0) {</span></span>
<span class="line"><span>						if (response.data.RESULT.length &gt; 0) {</span></span>
<span class="line"><span>						}</span></span>
<span class="line"><span>					}</span></span>
<span class="line"><span>				})</span></span>
<span class="line"><span>			}</span></span>
<span class="line"><span>		}</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>&lt;/script&gt;</span></span>
<span class="line"><span>&lt;style lang=&quot;less&quot; scoped&gt;</span></span>
<span class="line"><span>	.wrapper {</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>&lt;/style&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,63)]))}const c=e(l,[["render",t],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/%E8%AF%AD%E8%A8%80/vue/","title":"vue","lang":"zh-CN","frontmatter":{"title":"vue","createTime":"2020/05/08","permalink":"/语言/vue/","description":"文档 官方文档 安装 安装脚手架 npm install -g vue-cli npm i -g @vue/cli 卸载脚手架 npm uninstall -g vue-cli 查询脚手架版本 npm view vue-cli versions --json 删除脚手架 cnpm uninstall -g vue-cli 查看版本 vue -V 创建项...","head":[["meta",{"property":"og:url","content":"https://orthogonalandparallel.github.io/%E8%AF%AD%E8%A8%80/vue/"}],["meta",{"property":"og:site_name","content":"万里任禅游"}],["meta",{"property":"og:title","content":"vue"}],["meta",{"property":"og:description","content":"文档 官方文档 安装 安装脚手架 npm install -g vue-cli npm i -g @vue/cli 卸载脚手架 npm uninstall -g vue-cli 查询脚手架版本 npm view vue-cli versions --json 删除脚手架 cnpm uninstall -g vue-cli 查看版本 vue -V 创建项..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-03T02:10:36.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-03T02:10:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-03T02:10:36.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":4.04,"words":1211},"git":{"updatedTime":1756865436000,"contributors":[{"name":"靳琛","email":"jinchenj@yonyou.com","commits":4,"avatar":"https://avatars.githubusercontent.com/靳琛?v=4","url":"https://github.com/靳琛"}]},"autoDesc":true,"filePathRelative":"笔记/语言/前端/vue.md","categoryList":[{"id":"7051dc","sort":10000,"name":"笔记"},{"id":"d592ad","sort":10015,"name":"语言"},{"id":"a3eb3f","sort":10020,"name":"前端"}],"bulletin":false}');export{c as comp,r as data};
