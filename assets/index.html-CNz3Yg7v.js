import{_ as n,c as a,a as e,o as i}from"./app-DUomSOUZ.js";const l={};function p(t,s){return i(),a("div",null,s[0]||(s[0]=[e(`<h2 id="用途" tabindex="-1"><a class="header-anchor" href="#用途"><span>用途</span></a></h2><ul><li>文本查找</li><li>文本替换</li></ul><h2 id="组成" tabindex="-1"><a class="header-anchor" href="#组成"><span>组成</span></a></h2><ol><li>正则表达式分为：普通字符+元字符</li><li>元字符按打印方式分为：非打印字符+特殊字符</li><li>元字符按作用类型分为： 限定符+定位符</li></ol><h3 id="普通字符" tabindex="-1"><a class="header-anchor" href="#普通字符"><span>普通字符</span></a></h3><ul><li>没有标记为元字符的所有可打印字符（字母、数字、标点...）</li></ul><h3 id="非打印字符" tabindex="-1"><a class="header-anchor" href="#非打印字符"><span>非打印字符</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>\\cx：匹配x指明的控制字符</span></span>
<span class="line"><span>\\f：匹配换页符</span></span>
<span class="line"><span>\\n：匹配换行符</span></span>
<span class="line"><span>\\r： 匹配回车符</span></span>
<span class="line"><span>\\s：匹配任何空白字符</span></span>
<span class="line"><span>\\S：匹配任何非空白字符</span></span>
<span class="line"><span>\\t：匹配制表符</span></span>
<span class="line"><span>\\v：匹配垂直制表符</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="特殊字符" tabindex="-1"><a class="header-anchor" href="#特殊字符"><span>特殊字符</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>$：匹配字符串的结尾</span></span>
<span class="line"><span>^ ：匹配字符串开始位置</span></span>
<span class="line"><span>()：匹配一个子表达式的开始和结束</span></span>
<span class="line"><span>[ ：标记中括号表达式开始</span></span>
<span class="line"><span>{：标记限定符表达式开始</span></span>
<span class="line"><span>*：匹配前面的子表达式0次或多次</span></span>
<span class="line"><span>+：匹配前面的子表达式1次或多次</span></span>
<span class="line"><span>.：匹配换行符之外的任何字符</span></span>
<span class="line"><span>？：匹配前面表达式0次或1次</span></span>
<span class="line"><span>|：指明两项之间选择</span></span>
<span class="line"><span>\\：将后一个字符标记为（特殊字符、原义字符、向后引用、八进制转义）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="限定符" tabindex="-1"><a class="header-anchor" href="#限定符"><span>限定符</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>*：匹配前面子表达式0次或多次</span></span>
<span class="line"><span>+：匹配前面子表达式1次或多次</span></span>
<span class="line"><span>?：匹配前面子表达式0次或1次</span></span>
<span class="line"><span>{n}：匹配确定的n次</span></span>
<span class="line"><span>{n,}：匹配至少n次</span></span>
<span class="line"><span>{n,m}：至少匹配n次最多匹配m次</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="定位符" tabindex="-1"><a class="header-anchor" href="#定位符"><span>定位符</span></a></h3><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>^ ：匹配字符串开始位置</span></span>
<span class="line"><span>$：匹配字符串结尾位置</span></span>
<span class="line"><span>\\b：匹配字边界</span></span>
<span class="line"><span>\\B：匹配非字边界</span></span>
<span class="line"><span>\\s：匹配空白字符</span></span>
<span class="line"><span>\\uxxxx：匹配十六进制数xxxx规定的Unicode字符</span></span>
<span class="line"><span>i：大小写不敏感</span></span>
<span class="line"><span>[abc] [0-9]：匹配[]内字符</span></span>
<span class="line"><span>(a|b)：匹配a或者b</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><pre><code>* ^定位符限定符$
</code></pre>`,16)]))}const c=n(l,[["render",p],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/%E8%AF%AD%E8%A8%80/tftvm23f/","title":"Regular Expression","lang":"zh-CN","frontmatter":{"title":"Regular Expression","createTime":"2020/09/06 10:46:49","permalink":"/语言/tftvm23f/","description":"用途 文本查找 文本替换 组成 正则表达式分为：普通字符+元字符 元字符按打印方式分为：非打印字符+特殊字符 元字符按作用类型分为： 限定符+定位符 普通字符 没有标记为元字符的所有可打印字符（字母、数字、标点...） 非打印字符 特殊字符 限定符 定位符 语法","head":[["meta",{"property":"og:url","content":"https://orthogonalandparallel.github.io/%E8%AF%AD%E8%A8%80/tftvm23f/"}],["meta",{"property":"og:site_name","content":"万里任禅游"}],["meta",{"property":"og:title","content":"Regular Expression"}],["meta",{"property":"og:description","content":"用途 文本查找 文本替换 组成 正则表达式分为：普通字符+元字符 元字符按打印方式分为：非打印字符+特殊字符 元字符按作用类型分为： 限定符+定位符 普通字符 没有标记为元字符的所有可打印字符（字母、数字、标点...） 非打印字符 特殊字符 限定符 定位符 语法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-01T13:12:17.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-01T13:12:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Regular Expression\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-01T13:12:17.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":1.57,"words":471},"git":{"updatedTime":1751375537000,"contributors":[{"name":"靳琛","email":"jinchenj@yonyou.com","commits":1,"avatar":"https://avatars.githubusercontent.com/靳琛?v=4","url":"https://github.com/靳琛"}]},"autoDesc":true,"filePathRelative":"笔记/语言/后端/regularexpression.md","categoryList":[{"id":"7051dc","sort":10000,"name":"笔记"},{"id":"d592ad","sort":10015,"name":"语言"},{"id":"83a577","sort":10018,"name":"后端"}],"bulletin":false}');export{c as comp,r as data};
