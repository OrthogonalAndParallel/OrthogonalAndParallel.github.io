import{_ as n,c as e,a,o as i}from"./app-DUomSOUZ.js";const l={};function t(p,s){return i(),e("div",null,s[0]||(s[0]=[a(`<h2 id="swift" tabindex="-1"><a class="header-anchor" href="#swift"><span>Swift</span></a></h2><p><strong>简介</strong></p><ul><li>Swift用于开发iOS、OS X、watchOS。结合了C和Objective-C的优点并且不受</li></ul><p><strong>数据类型</strong></p><ul><li>int <ul><li>十进制整型 123</li><li>十六进制整型 0x1231f1</li></ul></li><li>float <ul><li>2434.34</li><li>12.4e6</li></ul></li><li>double <ul><li>143.4f</li></ul></li><li>char <ul><li>&#39;a&#39;</li></ul></li><li>常量</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>let name = jinchen</span></span>
<span class="line"><span>let number : Double = 50 指定类型</span></span>
<span class="line"><span>let apples = 3 </span></span>
<span class="line"><span>let appleSummary = &quot;I have \\(apples) apples&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>变量</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>var name = &quot;jinchen&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>数组</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>var arr = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]</span></span>
<span class="line"><span>var arr = []</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>字典</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>var dict = [&quot;name1&quot; : &quot;value1&quot;, &quot;name2&quot; : &quot;value2&quot; ]</span></span>
<span class="line"><span>var dict = [:]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>字符串</p><ul><li>字面量</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>let some = &quot;some things&quot;;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>空字符串</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>var emptyString = &quot;&quot;</span></span>
<span class="line"><span>var emptyString = String()</span></span>
<span class="line"><span>if emptyString.isEmpty {</span></span>
<span class="line"><span>    print(&quot;Nothing to see here&quot;);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>字符串可变性</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>字面量是常量还是变量确定字符串的可变性</span></span>
<span class="line"><span>字符串值类型</span></span>
<span class="line"><span>for character in &quot;Dog&quot; {</span></span>
<span class="line"><span>    print(character);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>字符串数量</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>let name = &quot;jinchen&quot;</span></span>
<span class="line"><span>print(&quot;name has (name.count) character&quot;)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>连接字符串和字符</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>let character1 ：Character = &quot;!&quot;</span></span>
<span class="line"><span>var welcome = &quot;good morning&quot;</span></span>
<span class="line"><span>welcome += character1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>字符串插值</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>let num = 3</span></span>
<span class="line"><span>let message = &quot;(num) times&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>比较字符串 <ul><li>字符串相等</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>let name1 = &quot;jinchen&quot;</span></span>
<span class="line"><span>let name2 = &quot;jinchen&quot;</span></span>
<span class="line"><span>if name1 == name2 {</span></span>
<span class="line"><span>    print(&quot;These two strings are considered equal&quot;)</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>字符串前缀、后缀比较 hasPrefix、hasSuffix</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>let romeoAndJuliet = {</span></span>
<span class="line"><span>    &quot;Act 1 AAAAA&quot;,</span></span>
<span class="line"><span>    &quot;Act 1 BBBBB&quot;,</span></span>
<span class="line"><span>    &quot;Act 1 CCCCC&quot;,</span></span>
<span class="line"><span>    &quot;Act 2 AAAAA&quot;,</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>var act1count = 0</span></span>
<span class="line"><span>for scene in romeoAndJuliet {</span></span>
<span class="line"><span>    if scene.hasPrefix(&quot;Act 1&quot;) {</span></span>
<span class="line"><span>        ++act1count</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>print(act1count);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>字符串大写、小写</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>let name = “JinChen”</span></span>
<span class="line"><span>let name1 = name.uppercaseString</span></span>
<span class="line"><span>let name2 = name.lowercaseString</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p><strong>流程控制</strong></p><ul><li><p>for循环</p><ul><li>for- in</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>for index in 1...5 { // ...表示序列</span></span>
<span class="line"><span>    print(index)</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>for _ in 1...5 {</span></span>
<span class="line"><span>    print(&quot;HelloWorld&quot;)</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>let interestingNumbers = [</span></span>
<span class="line"><span>    &quot;Frime&quot;: [2, 3, 5, 7, 11, 13],</span></span>
<span class="line"><span>    &quot;Equarl&quot;: [1, 4, 9, 16, 25]</span></span>
<span class="line"><span>]</span></span>
<span class="line"><span>var largest = 0</span></span>
<span class="line"><span>for (kind, numbers) in interestingNumbers {</span></span>
<span class="line"><span>    for number in numbers {</span></span>
<span class="line"><span>        if(number &gt; largest) {</span></span>
<span class="line"><span>            largest = number</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>print(largest)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>增量循环 Swift3 已经删除C样式语句</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>for var index1 = 0; index1 &lt; 3; ++index1 {</span></span>
<span class="line"><span>    print(index1)</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>while循环</p><ul><li>while</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>var n = 2</span></span>
<span class="line"><span>while n &lt; 100 {</span></span>
<span class="line"><span>    n = n + 30</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>print(n)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>repeat-while</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>var m = 2</span></span>
<span class="line"><span>repeat {</span></span>
<span class="line"><span>    m = m + 30</span></span>
<span class="line"><span>} while m &lt; 100</span></span>
<span class="line"><span>print(m)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>if语句</p></li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>var num2 = &quot;jin&quot;</span></span>
<span class="line"><span>if(num2 == &quot;jinchen&quot;) {</span></span>
<span class="line"><span>    print(1)</span></span>
<span class="line"><span>} else if(num2 == &quot;jin&quot;) {</span></span>
<span class="line"><span>    print(2)</span></span>
<span class="line"><span>} else {</span></span>
<span class="line"><span>    print(3)</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>switch</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>let someCharacter : Character = &quot;e&quot;</span></span>
<span class="line"><span>switch someCharacter {</span></span>
<span class="line"><span>    case &quot;a&quot;, &quot;b&quot;:</span></span>
<span class="line"><span>        print(&quot;AA&quot;)</span></span>
<span class="line"><span>    case &quot;e&quot;:</span></span>
<span class="line"><span>        print(&quot;BB&quot;)</span></span>
<span class="line"><span>    default:</span></span>
<span class="line"><span>        print(&quot;CC&quot;)</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>函数</strong></p><ul><li>单返回值</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>func sayHello(personName: String) -&gt; String {</span></span>
<span class="line"><span>    let message = &quot;Hello (personName)&quot;</span></span>
<span class="line"><span>    return message</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>print(sayHello(personName: &quot;Jc&quot;))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>多返回值</li></ul><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>func count(string: String) -&gt; (vowels: String, others: String) {</span></span>
<span class="line"><span>    var vowels = &quot;A&quot;, others = &quot;B&quot;</span></span>
<span class="line"><span>    vowels += string</span></span>
<span class="line"><span>    others += string</span></span>
<span class="line"><span>    return (vowels, others)</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>print(count(string: &quot;Jc&quot;))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23)]))}const c=n(l,[["render",t],["__file","index.html.vue"]]),r=JSON.parse(`{"path":"/%E8%AF%AD%E8%A8%80/ios/","title":"ios","lang":"zh-CN","frontmatter":{"title":"ios","createTime":"2020/06/25","permalink":"/语言/ios/","description":"Swift 简介 Swift用于开发iOS、OS X、watchOS。结合了C和Objective-C的优点并且不受 数据类型 int 十进制整型 123 十六进制整型 0x1231f1 float 2434.34 12.4e6 double 143.4f char 'a' 常量 变量 数组 字典 字符串 字面量 空字符串 字符串可变性 字符串数量 连...","head":[["meta",{"property":"og:url","content":"https://orthogonalandparallel.github.io/%E8%AF%AD%E8%A8%80/ios/"}],["meta",{"property":"og:site_name","content":"万里任禅游"}],["meta",{"property":"og:title","content":"ios"}],["meta",{"property":"og:description","content":"Swift 简介 Swift用于开发iOS、OS X、watchOS。结合了C和Objective-C的优点并且不受 数据类型 int 十进制整型 123 十六进制整型 0x1231f1 float 2434.34 12.4e6 double 143.4f char 'a' 常量 变量 数组 字典 字符串 字面量 空字符串 字符串可变性 字符串数量 连..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-01T13:12:17.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-01T13:12:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ios\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-01T13:12:17.000Z\\",\\"author\\":[]}"]]},"headers":[],"readingTime":{"minutes":1.64,"words":493},"git":{"updatedTime":1751375537000,"contributors":[{"name":"靳琛","email":"jinchenj@yonyou.com","commits":1,"avatar":"https://avatars.githubusercontent.com/靳琛?v=4","url":"https://github.com/靳琛"}]},"autoDesc":true,"filePathRelative":"笔记/语言/前端/ios.md","categoryList":[{"id":"7051dc","sort":10000,"name":"笔记"},{"id":"d592ad","sort":10015,"name":"语言"},{"id":"a3eb3f","sort":10020,"name":"前端"}],"bulletin":false}`);export{c as comp,r as data};
